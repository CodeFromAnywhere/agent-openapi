{
  "x-actionschema": "0.0.1",
  "$schema": "https://spec.actionschema.com/openapi.json",
  "openapi": "3.1.0",
  "info": {
    "title": "Agent OpenAPI",
    "version": "1.0",
    "description": ""
  },
  "servers": [{ "url": "http://localhost:3000" }],
  "security": [{ "apiKey": [] }],

  "paths": {
    "/completion-protocol/{toolsOpenapiUrlEncoded}/{agentUrlEncoded}/openapi.json": {
      "get": {
        "summary": "Get a completion openapi for any agent.",
        "operationId": "getCompletionOpenapi",
        "parameters": [
          {
            "name": "toolsOpenapiUrlEncoded",
            "in": "path",
            "description": "Encoded URL leading to an OpenAPI to use as tools",
            "schema": { "type": "string" },
            "required": true
          },
          {
            "name": "agentUrlEncoded",
            "in": "path",
            "description": "Encoded URL leading to an agent.json resource. If 'generated' is used,",
            "schema": { "type": "string", "example": "generated" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OpenAPI",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://spec.actionschema.com/openapi.json"
                }
              }
            }
          }
        }
      }
    },

    "/openapi.json": {
      "get": {
        "summary": "Get openapi",
        "operationId": "getOpenapi",

        "responses": {
          "200": {
            "description": "OpenAPI",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://spec.actionschema.com/openapi.json"
                }
              }
            }
          }
        }
      }
    },
    "/api/listAgents": {
      "post": {
        "summary": "Lists your agents",
        "operationId": "listAgents",
        "responses": {
          "200": {
            "description": "Signup response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": {
                        "$ref": "#/components/schemas/ToolAgent"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/removeAgent": {
      "post": {
        "summary": "Removes an agent",
        "operationId": "removeAgent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "rowIds": {
                    "type": "array",
                    "minLength": 1,
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "isSuccessful": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/upsertToolAgent": {
      "post": {
        "operationId": "upsertToolAgent",
        "summary": "Creates a new agent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ToolAgent" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signup response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertToolAgentResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/readAgentUser": {
      "post": {
        "summary": "Read Agent User",
        "description": "Retrieves the agent user information based on the provided authorization token.",
        "operationId": "readAgentUser",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "appId": {
                            "type": "string"
                          },
                          "openapiUrl": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          }
                        },
                        "required": ["openapiUrl", "secret"]
                      }
                    },
                    "threadIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/readAgentUserThread": {
      "post": {
        "summary": "Read Agent User Thread",
        "description": "Retrieves the thread information based on the provided authorization token and thread ID.",
        "operationId": "readAgentUserThread",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "threadId": { "type": "string" } }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": { "$ref": "#/components/schemas/MessagesArray" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          },
          "404": {
            "description": "Not found",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Invalid parameters",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          }
        }
      }
    },

    "/{agentSlug}/message": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "agentSlug",
            "schema": { "type": "string" },
            "required": true
          },
          {
            "in": "header",
            "name": "X_AGENT_AUTH_TOKEN",
            "schema": { "type": "string" },
            "required": true,
            "description": "Agent-wide authorization token to prevent runaway token usage."
          },
          {
            "in": "header",
            "name": "Authorization",
            "schema": { "type": "string", "minLength": 64 },
            "required": true,
            "description": "User-level authorization that can be retreived via the signup endpoint"
          }
        ],
        "summary": "Message an agent",
        "description": "Run a message in a thread of an assistant",
        "operationId": "message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MessageContext" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OpenAPI",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          }
        }
      }
    },

    "/{agentSlug}/openapi.json": {
      "get": {
        "summary": "Get openapi for this agent alone",
        "operationId": "renderAgentOpenapi",
        "parameters": [
          {
            "in": "path",
            "name": "agentSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OpenAPI",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "https://spec.actionschema.com/openapi.json"
                    },
                    {
                      "type": "object",
                      "required": ["isSuccessful"],
                      "properties": {
                        "isSuccessful": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },

    "/{agentSlug}/details": {
      "post": {
        "summary": "Get details for this agent",
        "operationId": "renderAgentDetails",
        "parameters": [
          {
            "in": "path",
            "name": "agentSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isSuccessful": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/{agentSlug}/userSignup": {
      "post": {
        "summary": "User signup",
        "description": "Signup as a user to this agent. Generates an authToken to which login credentials can be stored.",
        "operationId": "userSignup",
        "parameters": [
          {
            "in": "path",
            "name": "agentSlug",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": { "type": "string", "minLength": 64 }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "http",
        "bearerFormat": "Bearer",
        "scheme": "bearer",
        "description": "Admin Authtoken"
      }
    },

    "schemas": {
      "ToolAgent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "agentSlug",
          "instructions",
          "openaiSecretKey",
          "agentAuthToken"
        ],
        "properties": {
          "agentSlug": {
            "type": "string",
            "title": "Unique name",
            "$ref": "#/components/schemas/UrlSlug"
          },

          "instructions": {
            "type": "string"
          },

          "openaiSecretKey": {
            "type": "string",
            "description": "OpenAI Secret key. To create one, visit: https://platform.openai.com/api-keys"
          },

          "agentAuthToken": {
            "type": "string",
            "description": "Agent-wide token needed for authorizing to the agent openapi.",
            "minLength": 64,
            "maxLength": 128
          },

          "model": {
            "type": "string",
            "enum": ["gpt-4o", "gpt-3.5-turbo", "gpt-3.5-turbo-16k"]
          },

          "openapiUrl": {
            "type": "string",
            "description": "Used for tools for the agent"
          },

          "openapiAuthToken": {
            "type": "string",
            "description": "Used to authenticate to the OpenAPI to use tools"
          }
        }
      },

      "UrlSlug": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._~-]+$",
        "minLength": 1,
        "maxLength": 64,
        "description": "Slug compatible with URLs"
      },

      "UpsertToolAgentResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "result": { "$ref": "#/components/schemas/ToolAgent" }
        },
        "required": ["isSuccessful", "message"]
      },

      "MessageContext": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "threadId": {
            "type": "string",
            "description": "Can be specified to open a specific thread without history, and continue on that thread upon consequent messages. If no threadId is specified, will take the history of the first thread"
          },
          "disableHistory": {
            "type": "boolean",
            "description": "If given, will not use thread history messages regardless of the threadId."
          },
          "attachmentUrls": {
            "description": "Urls to files. Not all models support all file types.",
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["message"]
      },

      "MessagesArray": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "content": { "type": "string" },
            "role": { "type": "string" },
            "function_call": { "type": "object" },
            "tool_calls": { "type": "array" }
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },

          "messages": {
            "$ref": "#/components/schemas/MessagesArray"
          },

          "threadId": {
            "type": "string",
            "description": "threadId to keep talking in the same thread"
          },
          "newAuthToken": {
            "type": "string",
            "description": "In case you didn't sign up before, this is now your Authorization token. Can be used in conjunction with the threadId"
          }
        },
        "additionalProperties": false,
        "required": ["isSuccessful", "message"]
      }
    }
  }
}
